<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kzw.dao.SalaryMapper">
  <resultMap id="BaseResultMap" type="com.kzw.entity.Salary">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="base" jdbcType="DOUBLE" property="base" />
    <result column="achievement" jdbcType="DOUBLE" property="achievement" />
    <result column="reward_id" jdbcType="INTEGER" property="rewardId" />
    <result column="socialsec" jdbcType="DOUBLE" property="socialsec" />
    <result column="disgree" jdbcType="INTEGER" property="disgree" />
    <result column="ishandle" jdbcType="INTEGER" property="ishandle" />
  </resultMap>
  
  
    <resultMap id="WithRPBaseResultMap" type="com.kzw.entity.Salary">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="base" jdbcType="DOUBLE" property="base" />
    <result column="achievement" jdbcType="DOUBLE" property="achievement" />
    <result column="reward_id" jdbcType="INTEGER" property="rewardId" />
    <result column="socialsec" jdbcType="DOUBLE" property="socialsec" />
    <result column="disgree" jdbcType="INTEGER" property="disgree" />
    <result column="ishandle" jdbcType="INTEGER" property="ishandle" />
    
    <association property="rewardPunish" javaType="com.kzw.entity.RewardPunish">
    	<id column="rid" property="id"/>
    	<result column="money" property="money"/>
    	<result column="reason" property="reason"/>   	
    </association>
    
  </resultMap>
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_id, time, base, achievement, reward_id, socialsec, disgree, ishandle
  </sql>
  <select id="selectByExample" parameterType="com.kzw.entity.SalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByExampleWithRP" parameterType="java.lang.Integer" resultMap="WithRPBaseResultMap">
   SELECT
	salary.*, 
	rew.id rid,
	rew.money money,
	rew.reason reason
	FROM
	tb_salary salary,
	tb_rewardpunish rew
	WHERE
	salary.emp_id = rew.emp_id
	AND salary.emp_id =#{emp_id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_salary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_salary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kzw.entity.SalaryExample">
    delete from tb_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kzw.entity.Salary">
    insert into tb_salary (id, emp_id, time, 
      base, achievement, reward_id, 
      socialsec, disgree, ishandle
      )
    values (#{id,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{base,jdbcType=DOUBLE}, #{achievement,jdbcType=DOUBLE}, #{rewardId,jdbcType=INTEGER}, 
      #{socialsec,jdbcType=DOUBLE}, #{disgree,jdbcType=INTEGER}, #{ishandle,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kzw.entity.Salary">
    insert into tb_salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="base != null">
        base,
      </if>
      <if test="achievement != null">
        achievement,
      </if>
      <if test="rewardId != null">
        reward_id,
      </if>
      <if test="socialsec != null">
        socialsec,
      </if>
      <if test="disgree != null">
        disgree,
      </if>
      <if test="ishandle != null">
        ishandle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="base != null">
        #{base,jdbcType=DOUBLE},
      </if>
      <if test="achievement != null">
        #{achievement,jdbcType=DOUBLE},
      </if>
      <if test="rewardId != null">
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="socialsec != null">
        #{socialsec,jdbcType=DOUBLE},
      </if>
      <if test="disgree != null">
        #{disgree,jdbcType=INTEGER},
      </if>
      <if test="ishandle != null">
        #{ishandle,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kzw.entity.SalaryExample" resultType="java.lang.Long">
    select count(*) from tb_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_salary
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.base != null">
        base = #{record.base,jdbcType=DOUBLE},
      </if>
      <if test="record.achievement != null">
        achievement = #{record.achievement,jdbcType=DOUBLE},
      </if>
      <if test="record.rewardId != null">
        reward_id = #{record.rewardId,jdbcType=INTEGER},
      </if>
      <if test="record.socialsec != null">
        socialsec = #{record.socialsec,jdbcType=DOUBLE},
      </if>
      <if test="record.disgree != null">
        disgree = #{record.disgree,jdbcType=INTEGER},
      </if>
      <if test="record.ishandle != null">
        ishandle = #{record.ishandle,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_salary
    set id = #{record.id,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      base = #{record.base,jdbcType=DOUBLE},
      achievement = #{record.achievement,jdbcType=DOUBLE},
      reward_id = #{record.rewardId,jdbcType=INTEGER},
      socialsec = #{record.socialsec,jdbcType=DOUBLE},
      disgree = #{record.disgree,jdbcType=INTEGER},
      ishandle = #{record.ishandle,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kzw.entity.Salary">
    update tb_salary
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="base != null">
        base = #{base,jdbcType=DOUBLE},
      </if>
      <if test="achievement != null">
        achievement = #{achievement,jdbcType=DOUBLE},
      </if>
      <if test="rewardId != null">
        reward_id = #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="socialsec != null">
        socialsec = #{socialsec,jdbcType=DOUBLE},
      </if>
      <if test="disgree != null">
        disgree = #{disgree,jdbcType=INTEGER},
      </if>
      <if test="ishandle != null">
        ishandle = #{ishandle,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kzw.entity.Salary">
    update tb_salary
    set emp_id = #{empId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      base = #{base,jdbcType=DOUBLE},
      achievement = #{achievement,jdbcType=DOUBLE},
      reward_id = #{rewardId,jdbcType=INTEGER},
      socialsec = #{socialsec,jdbcType=DOUBLE},
      disgree = #{disgree,jdbcType=INTEGER},
      ishandle = #{ishandle,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>